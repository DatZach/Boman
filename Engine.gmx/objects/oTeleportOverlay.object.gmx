<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-49999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

var metadata = GetCurrentRoom();
layer = metadata[? 'tile-z'];

var r = FindShrineInMap(0, 0, layer, vk_right);
xx = r[0];
yy = r[1];

message = '';

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset message

message = '';

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle input

if (CheckKey(global.k_left, E_PRESS))
{
    var r = FindShrineInMap(xx, yy, layer, vk_left);
    xx = r[0];
    yy = r[1];
}
else if (CheckKey(global.k_right, E_PRESS))
{
    var r = FindShrineInMap(xx, yy, layer, vk_right);
    xx = r[0];
    yy = r[1];
}
else if (CheckKey(global.k_up, E_PRESS))
{
    var metadata = GetCurrentRoom();
    var groupId = metadata[? 'group-id'];
    var layerCount = ds_list_size(global.dungeonMaps[? groupId]);
    
    ++layer;
    if (layer &gt;= layerCount)
        layer = 0;
    
    var r = FindShrineInMap(0, 0, layer, vk_right);
    xx = r[0];
    yy = r[1];
}
else if (CheckKey(global.k_down, E_PRESS))
{
    var metadata = GetCurrentRoom();
    var groupId = metadata[? 'group-id'];
    var layerCount = ds_list_size(global.dungeonMaps[? groupId]);
    
    --layer;
    if (layer &lt;= 0)
        layer = layerCount - 1;
    
    var r = FindShrineInMap(0, 0, layer, vk_right);
    xx = r[0];
    yy = r[1];
}
else if (CheckKey(global.k_action, E_PRESS))
{
    var tileId = GetDungeonTileIdAt(xx, yy, 0);
    if (tileId != GetCurrentDungeonTileId())
    {
        var result = TeleportToShrine(tileId);
        if (!result)
        {
            message = 'Shrine not Active';
            alarm[0] = room_speed;
        }
        else
            instance_destroy();
    }
}
else if (CheckKey(global.k_toggle_item_overlay, E_PRESS))
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw map overlay

var OFFSET = 12;

var width = display_get_gui_width();
var height = display_get_gui_height();
var left = OFFSET;
var top = OFFSET;
var right = width - OFFSET;
var bottom = height - OFFSET;
var metadata = GetCurrentRoom();

var dmLeft = width / 2 - 240 + 80;
var dmTop = height / 2 - 144 + 48;

draw_sprite(sHudMapOverlay, 0, width / 2, height / 2);
DrawDungeonMap(
    dmLeft,
    dmTop,
    layer,
    ds_list_find_index(global.dungeonReveals, metadata[? 'group-id']) != -1,
    true
);

// NOTE The 80 constant will need to be changed inside of
//      DrawDungeonMap as well. This is a hack.
var mapLeft = dmLeft + 80; 

draw_sprite(sHudMapCell, 8, mapLeft + xx * 12, dmTop + yy * 12);

draw_set_color(c_black);
draw_set_font(fDialogue);
draw_set_halign(fa_center);

if (message == '')
{
    draw_text(
        width / 2,
        height / 2 + 144 - 48,
        concat('[', GetKeyNameU(global.k_action), '] to teleport | [', GetKeyNameU(global.k_toggle_item_overlay), '] to cancel')
    );
}
else
    draw_text(width / 2, height / 2 + 144 - 48, message);

draw_set_halign(fa_left);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
