<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLayerDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize door

dest = noone;
name = '';
group = '';
locked = false;

image_speed = 0;

alarm[1] = 1;
if (!RELEASE_MODE)
    alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unlock door if it's been registered before

var rMetadata = GetCurrentRoom();
var doorName = concat(rMetadata[? 'group-id'], name);
if (ds_list_find_index(global.unlockedDoors, doorName) != -1)
    locked = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG - Verify that the door was initialize correctly

if (dest == noone || name == '')
    ConsolePrint(oController.debugConsole, concat('The door ', id, ' does not have a valid destination.'));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle player interaction

if (group != '')
{
    locked = !AllPuzzleElementsTriggered(group);
    image_index = 2 + locked;
}
else
    image_index = locked;

if (place_meeting(x, y, oVine))
    exit;

var collision = place_meeting(x, y, oPlayer);
if (collision)
{
    if (locked)
    {
        if (group == '')
        {
            if (GetRoomKeyCount() &gt; 0)
                NotifyInteraction(InteractionIcon.Key, 'Unlock');
            else
                NotifyInteraction(InteractionIcon.Deny, 'Door Locked by Key');
        }
        else
            NotifyInteraction(InteractionIcon.Deny, 'Door Locked by Mechanism');
    }
    else
    {
        var srcMetadata = global.rooms[? room];
        var dstMetadata = global.rooms[? dest];
        var msg = iff(
            srcMetadata[? 'group-id'] == dstMetadata[? 'group-id'],
            'Enter',
            'Enter ' + dstMetadata[? 'name']
        );
        
        NotifyInteraction(InteractionIcon.UpArrow, msg);
    }
}

if (global.gamePaused)
    exit;

if (CheckKey(global.k_action, E_PRESS) &amp;&amp; collision)
{
    if (locked)
    {
        // Can only unlock doors that aren't assigned to a trigger group
        if (group == '')
        {
            var rMetadata = GetCurrentRoom();
            var doorName = concat(rMetadata[? 'group-id'], name);
            ds_list_add(global.unlockedDoors, doorName);
            AddKey(-1);
            locked = false;
        }
    }
    else
    {
        // TODO Room transition effect
        // NOTE This variable is used to specify the door to set the player's
        //      x/y to once we switch rooms. Make sure it's the unaltered name
        //      of the door
        global.destLayerDoorName = name;
        global.destLayerDoorId = id;
        gsfx(sfxEnterDoor);
        SetRoom(dest);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
